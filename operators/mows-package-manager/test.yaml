apiVersion: v1
kind: Service
metadata:
  name: stalwart.mows-core-email
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: smtp
    port: 25
    targetPort: smtp
  - name: submission
    port: 587
    targetPort: submission
  - name: smtps
    port: 465
    targetPort: smtps
  - name: imap
    port: 143
    targetPort: imap
  - name: imaps
    port: 993
    targetPort: imaps
  - name: sieve
    port: 4190
    targetPort: sieve
  selector:
    app: stalwart-server

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stalwart-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stalwart-server
  spec:
    containers:
    - command:
      - /usr/local/bin/stalwart-mail
      - --config
      - /config.toml
      env:
      - name: RUN_AS_USER
        value: '50003'
      image: stalwartlabs/mail-server
      imagePullPolicy: Always
      livenessProbe:
        httpGet:
          path: /healthz/live
          port: 8080
        initialDelaySeconds: 30
        periodSeconds: 10
      name: stalwart-server
      ports:
      - containerPort: 8080
        name: http
      - containerPort: 2500
        name: smtp
      - containerPort: 5870
        name: submission
      - containerPort: 4650
        name: smtps
      - containerPort: 1430
        name: imap
      - containerPort: 9930
        name: imaps
      - containerPort: 4190
        name: sieve
      readinessProbe:
        httpGet:
          path: /healthz/ready
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 10
      resources:
        cpu: 500m
        limits: null
        memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 50003
      volumeMounts:
      - mountPath: /opt/stalwart-mail
        name: mail-data
      - mountPath: /config.toml
        name: config
        subPath: config.toml
      - mountPath: /certs/default/
        name: default-certificates
    serviceAccountName: stalwart-server
    volumes:
    - name: mail-data
      persistentVolumeClaim:
        claimName: stalwart-server-data
    - name: config
      secret:
        name: stalwart-server-config
    - name: default-certificates
      secret:
        secretName: stalwart-default-certificates
  template:
    metadata:
      labels:
        app: stalwart-server

---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: stalwart-db-postgres
spec:
  bootstrap:
    initdb:
      database: stalwart
      owner: stalwart
      secret:
        name: stalwart-db-user
  enableSuperuserAccess: true
  instances: 1
  primaryUpdateStrategy: unsupervised
  storage:
    size: 2Gi
  superuserSecret:
    name: stalwart-db-admin

---
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
  name: stalwart-server-db-passwords
spec:
  secretEngine:
    kv-v2:
      kvData:
        db:
          admin: '{% randAlphaNum 100 %}'
          user: '{% randAlphaNum 100 %}'

---
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
  name: stalwart-server-db-passwords-sync
spec:
  secretSync:
    kvMapping:
      db:
        engine: stalwart-server-db-passwords
        path: db
    targets:
      secrets:
        stalwart-db-admin:
          data:
            password: '{% .secrets.db.admin  %}'
            username: postgres
          type: kubernetes.io/basic-auth
        stalwart-db-user:
          data:
            password: '{% .secrets.db.user %}'
            username: stalwart
          type: kubernetes.io/basic-auth
        stalwart-server-config:
          data:
            config.toml: "[lookup.default]\nhostname = \"mx.vindelicorum.eu\"\n\n[server.http]\nuse-x-forwarded = true\nhsts = true\n\n[server.listener.\"http\"]\nbind = \"[::]:8080\"\n\n[server.listener.\"smtp\"]\nbind = \"[::]:2500\"\n\n[server.listener.\"submission\"]\nbind = \"[::]:5870\"\n\n[server.listener.\"smtps\"]\nbind = \"[::]:4650\"\n\n[server.listener.\"imap\"]\nbind = \"[::]:1430\"\n\n[server.listener.\"imaps\"]\nbind = \"[::]:9930\"\n\n[server.listener.\"sieve\"]\nbind = \"[::]:4190\"                            \n\n[store.\"postgresql\"]\ntype = \"postgresql\"\nhost = \"stalwart-db-postgres-rw\"\nport = 5432\ndatabase = \"stalwart\"\nuser = \"stalwart\"\npassword = \"{% .secrets.db.user %}\"\ntimeout = \"15s\"\n\n[certificate.\"default\"]\ncert=\"%{file:/certs/default/tls.crt}%\"\nkey=\"%{file:/certs/default/tls.key}%\"\n# TODO handle reloading of certificates\n"

---
apiVersion: pektin.k8s.mows.cloud/v1
kind: PektinDns
metadata:
  name: primary-mail-domain
spec:
  plain:
  - data: mx.vindelicorum.eu.
    meta: ''
    name: vindelicorum.eu.
    ttl: 60
    type: MX
  - meta: ''
    name: mx.vindelicorum.eu.
    rr_set:
      A:
      - value: 116.203.53.54
    ttl: 60

---
