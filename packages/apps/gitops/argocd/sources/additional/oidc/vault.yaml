
# create the engine for the oidc secrets to be stored in
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: argocd-oidc
spec:
    secretEngine:
        kv-v2:
            kvData: {}

---
# create the policy for the zitadel controller to access the oidc secrets
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: zitadel-controller-allow-oidc-access
spec:
    engineAccessPolicy:
        subPolicies:
            - engineId: argocd-oidc
              engineType: secret
              subPath: "oidc"
              capabilities: ["update", "read", "create"]
---
# create a kubernetes service account binding to the policy
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: zitadel-controller-service-account
spec:
    authEngine:
        kubernetes:
            roles:
                zitadel-controller:
                    serviceAccountName: zitadel-controller
                    namespace: mows-core-auth-zitadel
                    policyIds: ["zitadel-controller-allow-oidc-access"]
---
# sync the secrets to the argocd configmap
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: argo-cm-secret-sync
spec:
    secretSync:
        kvMapping:
            oidc:
                engine: argocd-oidc
                path: "oidc"
        targets:
            configMaps:
                argocd-cm: 
                    data:
                        kustomize.buildOptions: "--enable-helm"
                        admin.enabled: "true"
                        oidc.config: |
                            name: Zitadel
                            issuer: https://zitadel.{ยง .config.domain ยง}
                            clientID: "{% .secrets.oidc.clientId %}"
                            # quotes are needed for the client id because it needs to be a string and not a number as it is provided by zitadel/vault
                            clientSecret: "{% .secrets.oidc.clientSecret %}"
                            requestedScopes:
                            - openid
                            - profile
                            - email
                            - groups
