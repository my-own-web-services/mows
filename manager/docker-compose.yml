services:
    mows-manager:
        image: mows-manager
        container_name: mows-manager
        build:
            context: "."
            dockerfile: docker/manager.Dockerfile
            additional_contexts:
                mows-package-manager: ../operators/mows-package-manager
                mows-common: ../utils/mows-common
                lock: ../
            args:
                - PROFILE=dev # dev or release
                - SERVICE_NAME=${SERVICE_NAME:-mows-manager}
                - BUILD_UI=${BUILD_UI:-true}
                - BUILD_PACKAGE_MANAGER_CLI=${BUILD_PACKAGE_MANAGER_CLI:-true}
            tags:
                - ${REGISTRY:-localhost:5000}/${SERVICE_NAME:-mows-manager}
                - mows-manager
        init: true # without this the mows manager cant start a pty process
        networks:
            mows-manager:
                ipv4_address: "192.168.112.3"
                mac_address: "02:42:c0:a8:70:03"
            mows-manager-local:
        dns:
            - "192.168.112.3"
        cap_add:
            - "NET_ADMIN"
        env_file:
            - .env
            - secrets.env
        ports:
            - "::1:${WEB_PORT}:3000" # web ui
            - "::1:6669:6669" # tokio console
            - "::1:8001:8001" # kubectl proxy
            - "::1:8080:8080" # helm dashboard or other manually forwarded ui
            - "::1:53:53" # dns
            - "::1:10000-10009:10000-10009" # ustreamer
        privileged: true
        volumes:
            - ./temp/manager:/temp/:rw
            - ./misc/internal-config.yml:/internal-config.yml:ro
            - ./install:/install:ro
            - ../packages/:/packages/
            - ../operators/:/operators/
            - ../apis/:/apis/
            - /etc/resolv.conf:/etc/host-resolv.conf:ro
            - /dev:/dev:rw
            - /run/udev:/run/udev:ro
        environment:
            WEB_PORT: ${WEB_PORT}
            LIBVIRT_DEFAULT_URI: qemu+tcp://qemu/system # qemu+tcp://localhost/system
            #- RUST_BACKTRACE=full
            RUST_LOG: manager=debug,mows_package_manager=info,tower_http=debug,axum::rejection=trace,tokio=debug,runtime=debug,russh=error,manager::config_locks=error
            EDIT_LOCAL_DNS_CONFIG: ${EDIT_LOCAL_DNS_CONFIG}
    qemu:
        image: qemu
        restart: always
        init: true
        privileged: true
        container_name: qemu
        build:
            context: "."
            dockerfile: docker/qemu.Dockerfile
        ports:
            - "::1:16509:16509" # qemu monitor/control
            #- "::1:5900-5999:5900-5999" # spice
            - "::1:5700-5799:5700-5799" # vnc websocket
        cap_add:
            - "NET_ADMIN"
        devices:
            - "/dev/kvm"
        networks:
            mows-manager:
                ipv4_address: "192.168.112.4"
            # we need two networks because the pxe network is bridged
    mows-dev-local-registry:
        image: registry:2
        container_name: mows-dev-local-registry
        restart: always
        ports:
            - "::1:5000:5000"
        volumes:
            - ./temp/registries/local:/var/lib/registry:rw
        networks:
            mows-manager:
                ipv4_address: "192.168.112.5"

    # TODO: replace with https://github.com/mcronce/oci-registry
    mows-dev-pull-through-cache-docker:
        image: registry:2
        container_name: mows-dev-pull-through-cache-docker
        restart: always
        environment:
            - REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io
        networks:
            mows-manager:
                ipv4_address: "192.168.112.6"
        volumes:
            - ./temp/registries/docker:/var/lib/registry:rw
    mows-dev-pull-through-cache-quay:
        image: registry:2
        container_name: mows-dev-pull-through-cache-quay
        restart: always
        environment:
            - REGISTRY_PROXY_REMOTEURL=https://quay.io
        networks:
            mows-manager:
                ipv4_address: "192.168.112.7"
        volumes:
            - ./temp/registries/quay:/var/lib/registry:rw
    mows-dev-pull-through-cache-gcr:
        image: registry:2
        container_name: mows-dev-pull-through-cache-gcr
        restart: always
        environment:
            - REGISTRY_PROXY_REMOTEURL=https://gcr.io
        networks:
            mows-manager:
                ipv4_address: "192.168.112.8"
        volumes:
            - ./temp/registries/gcr:/var/lib/registry
    mows-dev-pull-through-cache-k8s:
        image: registry:2
        container_name: mows-dev-pull-through-cache-k8s
        restart: always
        environment:
            - REGISTRY_PROXY_REMOTEURL=https://k8s.gcr.io
        networks:
            mows-manager:
                ipv4_address: "192.168.112.9"
        volumes:
            - ./temp/registries/k8s:/var/lib/registry:rw
    mows-dev-pull-through-cache-ghcr:
        image: registry:2
        container_name: mows-dev-pull-through-cache-ghcr
        restart: always
        environment:
            - REGISTRY_PROXY_REMOTEURL=https://ghcr.io
        networks:
            mows-manager:
                ipv4_address: "192.168.112.10"
        volumes:
            - ./temp/registries/ghcr:/var/lib/registry:rw

volumes:
    mows-dev-local-registry:
        name: mows-dev-local-registry

networks:
    mows-manager:
        name: mows-manager
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 192.168.112.0/24
                  gateway: "192.168.112.1"
        driver_opts:
            com.docker.network.bridge.name: mows-manager
            com.docker.network.container_iface_prefix: mows-manager
    mows-manager-local:
        name: mows-manager-local
        external: true
