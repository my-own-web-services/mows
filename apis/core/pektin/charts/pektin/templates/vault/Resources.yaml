apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: pektin-signing
spec:
    secretEngine:
        transit: {}
---
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: pektin-policies
spec:
    secretEngine:
        kv-v2:
            kvData:
                pektin-zertificat:
                    ribston-policy: |- {{ range .Files.Lines "policies/ribston/acme.ribston.js" }}
                        {{ . }}{{ end }}
                pektin-dns-controller:
                    ribston-policy: |- {{ range .Files.Lines "policies/ribston/allow-everything.ribston.js" }}
                        {{ . }}{{ end }}
---
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: pektin-zertificat
spec:
    secretEngine:
        kv-v2:
            kvData: {}
                
---
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: pektin-api-policy
spec:
    engineAccessPolicy:
        subPolicies:
            - engineId: pektin-signing
              engineType: secret
              subPath: "*"
              capabilities: ["update", "read", "create"]

---
# allow zertificat access to its engine to store TLS certificates

apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: pektin-zertificat-policy
spec:
    engineAccessPolicy:
        subPolicies:
            - engineId: pektin-zertificat
              engineType: secret
              subPath: "*"
              capabilities: ["update", "read", "create", "delete", "list"]

---

# create the auth engine for general authentication
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: pektin-kubernetes
spec:
    authEngine:
        kubernetes:
            roles:
                pektin-api:
                    serviceAccountName: pektin-api
                    policyIds: ["pektin-api-policy"]
                pektin-zertificat:
                    serviceAccountName: pektin-zertificat
                    policyIds: ["pektin-zertificat-policy"]
