apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: pektin-secrets
spec:
    secretEngine:
        kv-v2:
            kvData:
                dbPasswords:
                    server: "{% randAlphaNum 100 %}"
                    api: "{% randAlphaNum 100 %}"
---
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: pektin-db-passwords-sync
spec:
    secretSync:
        kvMapping:
            dbPasswords: # name in the template engine
                engine: pektin-secrets # name of the secretEngine in the same namespace as the resource
                path: "dbPasswords" # path to the secret in the secretEngine
        targets:
            configMaps:
                pektin-db-acl: # name of the secret in the same namespace
                    data: |
                        user default off
                        user db-pektin-server on resetchannels allkeys -@all +GET +MGET +KEYS +SELECT #{% .secrets.dbPasswords.server | sha256sum %}
                        user db-pektin-api on resetchannels allkeys -@all +SET +GET +MSET +MGET +DEL +KEYS +SELECT +PING #{% .secrets.dbPasswords.api | sha256sum  %}
            secrets:
                pektin-db-server-password:
                    map:
                        data: "{% .secrets.dbPasswords.server %}"
                pektin-db-api-password:                
                    map:
                        data: "{% .secrets.dbPasswords.api %}"
---
apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: traefik-certificates-sync
    labels:
        k8s.mows.cloud/sudo: "true"
        vault.k8s.mows.cloud/force-target-namespace: "mows-core-network-ingress"
spec:
    secretSync:
        kvMapping:
            certificates: # name in the template engine
                engine: pektin-zertificat # name of the secretEngine in the same namespace as the resource
                path: "vindelicorum.eu" # path to the secret in the secretEngine
        targets:
            secrets:
                traefik-certificates:
                    map:
                        tls.crt: "{% .secrets.certificates.cert %}"
                        tls.key: "{% .secrets.certificates.key %}"

---

apiVersion: vault.k8s.mows.cloud/v1
kind: VaultResource
metadata:
    name: stalwart-certificates-sync
    labels:
        k8s.mows.cloud/sudo: "true"
        vault.k8s.mows.cloud/force-target-namespace: "mows-core-com-email"
spec:
    secretSync:
        kvMapping:
            certificates: # name in the template engine
                engine: pektin-zertificat # name of the secretEngine in the same namespace as the resource
                path: "vindelicorum.eu" # path to the secret in the secretEngine
        targets:
            secrets:
                stalwart-default-certificates:
                    map:
                        tls.crt: "{% .secrets.certificates.cert %}"
                        tls.key: "{% .secrets.certificates.key %}"