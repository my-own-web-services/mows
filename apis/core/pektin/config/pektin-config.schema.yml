$schema: http://json-schema.org/draft-07/schema#
title: Pektin Config
description: The configuration for the Pektin DNS server
type: object
additionalProperties: false
properties:
    services:
        type: object
        additionalProperties: false
        required:
            - server
            - ui
            - api
            - vault
            - tnt
            - zertificat
            - ribston
            - opa
            - jaeger
            - prometheus
            - grafana
            - alert
            - verkehr
        properties:
            server:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - logging
                    - build
                properties:
                    enabled:
                        type: boolean
                    logging:
                        $ref: "#/$defs/Logging"
                    build:
                        $ref: "#/$defs/BuildFromSource"
            ui:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - subDomain
                    - domain
                    - build
                properties:
                    enabled:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                    build:
                        $ref: "#/$defs/BuildFromSource"
            api:
                type: object
                additionalProperties: false
                required:
                    - subDomain
                    - domain
                    - logging
                    - build
                    - perimeterAuth
                properties:
                    perimeterAuth:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                    logging:
                        $ref: "#/$defs/Logging"
                    build:
                        $ref: "#/$defs/BuildFromSource"
            vault:
                type: object
                additionalProperties: false
                required:
                    - subDomain
                    - domain
                    - build
                    - perimeterAuth
                properties:
                    perimeterAuth:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                    build:
                        $ref: "#/$defs/BuildFromSource"
            verkehr:
                type: object
                additionalProperties: false
                required:
                    - build
                    - routing
                    - tls
                    - external
                    - tempZone
                    - enabled
                properties:
                    enabled:
                        type: boolean
                    build:
                        $ref: "#/$defs/BuildFromSource"
                    routing:
                        enum: [local, domain, minikube]
                    tempZone:
                        type: object
                        additionalProperties: false
                        required:
                            - enabled
                            - provider
                            - routing
                        properties:
                            enabled:
                                type: boolean
                            provider:
                                type: string
                                description: Get a temporary subdomain for an easy and secure access while your domain changes still propagate. This subdomain will exist for 7 days, will then be deleted and not be recoverable afterwards. For pektin.zone. this implies your acceptance of our privacy policy.
                            routing:
                                enum: [local, public]
                    tls:
                        type: boolean
                    external:
                        description: Proxy to external APIs that aren't configured to use CORS.
                        type: object
                        additionalProperties: false
                        required:
                            - enabled
                            - subDomain
                            - domain
                            - services
                        properties:
                            enabled:
                                type: boolean
                            domain:
                                $ref: "#/$defs/DomainName"
                            subDomain:
                                $ref: "#/$defs/SubDomain"
                            services:
                                type: array
                                items:
                                    type: object
                                    additionalProperties: false
                                    required:
                                        - name
                                        - enabled
                                        - domain
                                        - accessControlAllowMethods
                                        - accessControlAllowHeaders
                                    properties:
                                        enabled:
                                            type: boolean
                                        name:
                                            type: string
                                        domain:
                                            type: string
                                        accessControlAllowMethods:
                                            type: array
                                            items:
                                                type: string
                                        accessControlAllowHeaders:
                                            type: array
                                            items:
                                                type: string
            zertificat:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - build
                    - acmeEmail
                    - acmeEndpoint
                properties:
                    enabled:
                        type: boolean
                    build:
                        $ref: "#/$defs/BuildFromSource"
                    acmeEndpoint:
                        type: string
                    acmeEmail:
                        $ref: "#/$defs/Email"
                    usePebble:
                        description: This OVERRIDES the acmeEndpoint internally as well as build.dockerfile
                        type: boolean
            tnt:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - subDomain
                    - domain
                    - build
                properties:
                    enabled:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                    build:
                        $ref: "#/$defs/BuildFromSource"
            ribston:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - build
                properties:
                    enabled:
                        type: boolean
                    build:
                        $ref: "#/$defs/BuildFromSource"
            opa:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - build
                properties:
                    enabled:
                        type: boolean
                    build:
                        $ref: "#/$defs/BuildFromSource"
            jaeger:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - build
                properties:
                    enabled:
                        type: boolean
                    build:
                        $ref: "#/$defs/BuildFromSource"
            prometheus:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - build
                properties:
                    enabled:
                        type: boolean
                    build:
                        $ref: "#/$defs/BuildFromSource"
            grafana:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - subDomain
                    - domain
                    - build
                properties:
                    enabled:
                        type: boolean
                    domain:
                        $ref: "#/$defs/DomainName"
                    subDomain:
                        $ref: "#/$defs/SubDomain"
                    build:
                        $ref: "#/$defs/BuildFromSource"
            alert:
                type: object
                additionalProperties: false
                required:
                    - enabled
                    - build
                properties:
                    enabled:
                        type: boolean
                    build:
                        $ref: "#/$defs/BuildFromSource"

    usePolicies:
        type: string
        enum: [ribston, opa, both, false]
    nodes:
        type: array
        minItems: 1
        items:
            type: object
            additionalProperties: false
            required:
                - name
            properties:
                main:
                    type: boolean
                ips:
                    type: array
                    minItems: 1
                    items:
                        $ref: "#/$defs/Ip"
                legacyIps:
                    type: array
                    minItems: 1
                    items:
                        $ref: "#/$defs/LegacyIp"
                name:
                    type: string
                ansible:
                    $ref: "#/$defs/AnsibleConfig"
                setup:
                    type: object
                    additionalProperties: false
                    required:
                        - system
                        - root
                        - cloneRepo
                        - setup
                        - start
                    properties:
                        system:
                            type: string
                        root:
                            type: object
                            additionalProperties: false
                            properties:
                                disableSystemdResolved:
                                    type: boolean
                                installDocker:
                                    type: boolean
                            required:
                                - disableSystemdResolved
                                - installDocker
                        cloneRepo:
                            type: boolean
                        setup:
                            type: boolean
                        start:
                            type: boolean
    nameservers:
        type: array
        minItems: 1
        # one nameserver (for each domain) must have the main attribute set to true
        items:
            type: object
            additionalProperties: false
            required:
                - domain
                - node
            properties:
                subDomain:
                    $ref: "#/$defs/SubDomain"
                domain:
                    $ref: "#/$defs/DomainName"
                node:
                    type: string
                main:
                    type: boolean
    ansible:
        type: object
        additionalProperties: false
        required:
            - sshPubKeyName
        properties:
            sshPubKeyName:
                type: string
required:
    - services
    - nodes
    - nameservers
    - usePolicies
$defs:
    Logging:
        type: string
    BuildFromSource:
        type: object
        additionalProperties: false
        required:
            - enabled
            - path
            - dockerfile
        properties:
            enabled:
                type: boolean
            path:
                type: string
            dockerfile:
                type: string
    DomainName:
        type: string
        description: "A valid UTF8 domain name NOT ending with a dot"
        #pattern: '^(?:[a-z0-9_](?:[a-z0-9-_]{0,61}[a-z0-9_]|[-]{2,}?)?\.)*[a-z0-9-_][a-z0-9-]{0,61}[a-z0-9]{1,61}[.]?$'
    SubDomain:
        type: string
        description: "A valid UTF8 domain name NOT ending with a dot"
        #pattern: '^(?:[a-z0-9_](?:[a-z0-9-_]{0,61}[a-z0-9_]|[-]{2,}?)?\.)*[a-z0-9-_][a-z0-9-]{0,61}[a-z0-9]{1,61}(?<!\.)$'
    Ip:
        type: string
        description: "A valid ip(ipv6) address"
        pattern: '^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$'
    LegacyIp:
        type: string
        description: "A valid legacyIp(ipv4) address"
        pattern: '^(\b25[0-5]|\b2[0-4][0-9]|\b[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$'
    Email:
        type: string
        description: A valid email address
        #pattern: ^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])[.]?$
    NodeName:
        type: string
        description: A alphanumeric hostname for the node not containing double minuses "--"
        pattern: ^((?!--)[a-z0-9-_])*$
    SupportedRegistrars:
        enum: [gandi]
    AnsibleConfigType:
        type: string
        enum: [hetzner]
    AnsibleConfig:
        oneOf:
            - { $ref: "#/$defs/Hetzner" }
    Hetzner:
        type: object
        additionalProperties: false
        required:
            - configType
        properties:
            configType:
                $ref: "#/$defs/AnsibleConfigType"
            floatingIp:
                type: boolean
            floatingLegacyIp:
                type: boolean
            location:
                type: string
                enum: [nbg1, fsn1]
            serverType:
                $ref: "#/$defs/HetznerServerType"
    HetznerServerType:
        type: string
        enum: [cx11, cpx11, cx21, cpx21, cx31, cpx31, cx41, cpx41, cx51, cpx51]
