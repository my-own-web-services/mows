apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ .Values.server.name }}
    {{- if .Values.server.dev.autoUpdate }}
    annotations:
        keel.sh/policy: force
        keel.sh/trigger: poll
        keel.sh/pollSchedule: "@every 1s"
    {{- end }}
spec:
    replicas: {{ .Values.server.replicaCount }}
    revisionHistoryLimit: 0
    selector:
        matchLabels:
            app: {{ .Values.server.name }}
    template:
        metadata:
            labels:
                app: {{ .Values.server.name }}
        spec:
            serviceAccountName: {{ .Values.server.name }}
            {{- if .Values.server.localStorage.enabled }}
            volumes:
                -   name: filez-default-storage
                    persistentVolumeClaim:
                        claimName: filez-default-storage
            {{-  end }}
            containers:
                -   name: {{ .Values.server.name }}
                    image: "{{ .Values.server.image }}"
                    imagePullPolicy: {{ .Values.server.imagePullPolicy }}
                    securityContext:
                        allowPrivilegeEscalation: false
                        readOnlyRootFilesystem: true
                        runAsNonRoot: true
                        runAsUser: 50003
                    {{- if .Values.server.localStorage.enabled }}
                    volumeMounts:
                        -   name: filez-default-storage
                            mountPath: /data/filez-default-storage
                    {{- end }}
                    ports:
                        -   name: http
                            containerPort: 8080
                            protocol: TCP
                    resources:
                        limits:
                            memory: 128Mi
                            cpu: 500m
                    livenessProbe:
                        httpGet:
                            path: /api/health
                            port: 8080
                    env:
                        -   name: OIDC_CLIENT_ID
                            valueFrom:
                                secretKeyRef:
                                    name: {{ .Values.server.name }}-auth
                                    key: serverClientId
                        -   name: OIDC_CLIENT_SECRET
                            valueFrom:
                                secretKeyRef:
                                    name: {{ .Values.server.name }}-auth
                                    key: serverClientSecret
                        -   name: OIDC_ISSUER
                            valueFrom:
                                secretKeyRef:
                                    name: {{ .Values.server.name }}-auth
                                    key: issuer
                        -   name: PRIMARY_ORIGIN
                            value: "https://{{ .Values.web.subdomain }}.{ยง .config.domain ยง}"
                        -   name: ENABLE_DEV
                            value: {{ .Values.server.dev.enabled | quote }}
                        -   name: DEV_ALLOW_ORIGINS
                            value: {{ .Values.server.dev.allowedCorsOrigins | quote }}
                        -   name: DATABASE_URL
                            valueFrom:
                                secretKeyRef:
                                    name: filez-db-user-connection-string
                                    key: connectionString
                        -   name: TRACING_FILTER
                            value: {{ .Values.server.tracing.filter | quote }}
                        -   name: LOG_FILTER
                            value: {{ .Values.server.log.filter | quote }}
                        