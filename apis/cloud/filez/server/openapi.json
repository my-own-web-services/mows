{
    "openapi": "3.1.0",
    "info": {
        "title": "filez-server",
        "description": "API for managing files in MOWS Filez",
        "license": { "name": "" },
        "version": "0.0.1"
    },
    "paths": {
        "/api/access_policies/check": {
            "post": {
                "description": "Check if the user has access to the requested resources",
                "operationId": "check_resource_access",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckResourceAccessRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Checked if the requested resources are available to this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CheckResourceAccessResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/access_policies/create": {
            "post": {
                "description": "Create a new access policy",
                "operationId": "create_access_policy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccessPolicyRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created the access policy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CreateAccessPolicyResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/access_policies/delete/{access_policy_id}": {
            "delete": {
                "description": "Delete an access policy by its ID",
                "operationId": "delete_access_policy",
                "parameters": [
                    {
                        "name": "access_policy_id",
                        "in": "path",
                        "description": "The ID of the access policy to delete",
                        "required": true,
                        "schema": { "$ref": "#/components/schemas/AccessPolicyId" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted the access policy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/access_policies/get": {
            "post": {
                "description": "Get access policies from the server by their IDs",
                "operationId": "get_access_policy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GetAccessPolicyRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Got the access policies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetAccessPolicyResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/access_policies/list": {
            "post": {
                "description": "List access policies from the server",
                "operationId": "list_access_policies",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListAccessPoliciesRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed access policies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListAccessPoliciesResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/access_policies/update": {
            "put": {
                "description": "Update an existing access policy",
                "operationId": "update_access_policy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccessPolicyRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the access policy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_UpdateAccessPolicyResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/apps/get": {
            "post": {
                "description": "Get apps from the server",
                "operationId": "get_apps",
                "responses": {
                    "200": {
                        "description": "Got apps from the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetAppsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/apps/list": {
            "post": {
                "description": "List apps from the server",
                "operationId": "list_apps",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/ListAppsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed apps from the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListAppsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dev/reset_database": {
            "post": {
                "description": "Resets the database to its initial state (for development purposes only)",
                "operationId": "reset_database",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/DevResetDatabaseRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Database reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_groups/create": {
            "post": {
                "description": "Create a new file group",
                "operationId": "create_file_group",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/CreateFileGroupRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created the file group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CreateFileGroupResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_groups/delete/{file_group_id}": {
            "delete": {
                "description": "Delete a file group by its ID",
                "operationId": "delete_file_group",
                "parameters": [
                    {
                        "name": "file_group_id",
                        "in": "path",
                        "description": "The ID of the file group to delete",
                        "required": true,
                        "schema": { "$ref": "#/components/schemas/FileGroupId" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted the file group",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/ApiResponse_String" }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_groups/get": {
            "get": {
                "description": "Gets file groups by their IDs",
                "operationId": "get_file_group",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GetFileGroupsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Got the file groups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetFileGroupsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_groups/list": {
            "post": {
                "description": "List file groups",
                "operationId": "list_file_groups",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/ListFileGroupsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed file groups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListFileGroupsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_groups/list_files": {
            "post": {
                "description": "Lists files in a file group",
                "operationId": "list_files_in_file_group",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/ListFilesRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed the files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListFilesResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_groups/update": {
            "put": {
                "description": "Update a file group",
                "operationId": "update_file_group",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/UpdateFileGroupRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the file group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_UpdateFileGroupResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_groups/update_members": {
            "post": {
                "description": "Update the members of a file group",
                "operationId": "update_file_group_members",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFileGroupMembersRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the file members of the file group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_versions/content/get/{file_id}/{version}/{app_id}/{app_path}": {
            "get": {
                "description": "Get the content of a file version.",
                "operationId": "get_file_version_content",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "The ID of the file to retrieve content for",
                        "required": true,
                        "schema": { "type": "string", "format": "uuid" }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The version of the file to retrieve, if left empty, the latest version will be returned",
                        "required": true,
                        "schema": { "type": ["integer", "null"], "format": "int32", "minimum": 0 }
                    },
                    {
                        "name": "app_id",
                        "in": "path",
                        "description": "The ID of the application that uploaded the file, if left empty, the app id is the filez server itself",
                        "required": true,
                        "schema": { "type": ["string", "null"], "format": "uuid" }
                    },
                    {
                        "name": "app_path",
                        "in": "path",
                        "required": true,
                        "schema": { "type": ["string", "null"] }
                    },
                    {
                        "name": "disposition",
                        "in": "query",
                        "description": "If set to true, the content disposition header will be set to attachment",
                        "required": false,
                        "schema": { "type": "boolean" }
                    },
                    {
                        "name": "cache",
                        "in": "query",
                        "description": "If set, the cache control header will be set to public, max-age={c}",
                        "required": false,
                        "schema": { "type": "integer", "format": "int64", "minimum": 0 }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Got the file version content",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": { "type": "integer", "format": "int32", "minimum": 0 }
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Partial content returned due to range request",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "array",
                                    "items": { "type": "integer", "format": "int32", "minimum": 0 }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error retrieving file content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_versions/content/tus/{file_id}/{version}/{app_id}/{app_path}": {
            "head": {
                "description": "Get the offset of a file version for resuming a Tus upload",
                "operationId": "file_versions_content_tus_head",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "The ID of the file to check for upload status",
                        "required": true,
                        "schema": { "type": "string", "format": "uuid" }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The version of the file, if applicable",
                        "required": true,
                        "schema": { "type": ["integer", "null"], "format": "int32", "minimum": 0 }
                    },
                    {
                        "name": "app_id",
                        "in": "path",
                        "description": "The ID of the application that uploaded the file, if left empty, the app id is the filez server itself",
                        "required": true,
                        "schema": { "type": ["string", "null"], "format": "uuid" }
                    },
                    {
                        "name": "app_path",
                        "in": "path",
                        "required": true,
                        "schema": { "type": ["string", "null"] }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File exists and is ready to resume upload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, missing or invalid headers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition failed due to missing or invalid Tus-Resumable header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_versions/content/tus/{file_id}/{version}/{app_path}": {
            "patch": {
                "tags": ["FileVersion"],
                "description": "Patch a file version using the TUS protocol. The file and the file version must exist. If the file version is marked as verified it cannot be patched, unless the expected checksum is updated or removed.",
                "operationId": "file_versions_content_tus_patch",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "The ID of the file to patch",
                        "required": true,
                        "schema": { "type": "string", "format": "uuid" }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The version of the file to patch",
                        "required": true,
                        "schema": { "type": ["integer", "null"], "format": "int32", "minimum": 0 }
                    },
                    {
                        "name": "app_path",
                        "in": "path",
                        "required": true,
                        "schema": { "type": ["string", "null"] }
                    },
                    {
                        "name": "Tus-Resumable",
                        "in": "header",
                        "description": "The Tus protocol version.",
                        "required": true,
                        "schema": { "type": "string" },
                        "example": "1.0.0"
                    }
                ],
                "requestBody": { "content": { "application/offset+octet-stream": {} } },
                "responses": {
                    "204": {
                        "description": "File was successfully patched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, missing or invalid headers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition failed, likely due to missing or invalid Tus-Resumable header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "File version size exceeded, the size of the file version exceeds the allowed limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_FileVersionSizeExceededErrorBody"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type, Content-Type must be application/offset+octet-stream",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error, unexpected error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_versions/create": {
            "post": {
                "description": "Create a new file version entry in the database",
                "operationId": "create_file_version",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFileVersionRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created a file version on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CreateFileVersionResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_versions/delete/{file_version_id}": {
            "delete": {
                "description": "Delete file versions in the database",
                "operationId": "delete_file_versions",
                "parameters": [
                    {
                        "name": "file_version_id",
                        "in": "path",
                        "description": "The ID of the file version to delete",
                        "required": true,
                        "schema": { "$ref": "#/components/schemas/FileVersionId" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted file version on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_versions/get": {
            "post": {
                "description": "Get file versions from the server for the given file version IDs",
                "operationId": "get_file_versions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GetFileVersionsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Got file versions from the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetFileVersionsResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file_versions/update": {
            "post": {
                "description": "Updates a file version in the database",
                "operationId": "update_file_version",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFileVersionsRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the file version on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_UpdateFileVersionsResponseBody"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/files/create": {
            "post": {
                "description": "Create a new file entry in the database",
                "operationId": "create_file",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/CreateFileRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created a file on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CreateFileResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/files/delete/{file_id}": {
            "delete": {
                "description": "Delete a file entry in the database",
                "operationId": "delete_file",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "The ID of the file to delete",
                        "required": true,
                        "schema": { "$ref": "#/components/schemas/FilezFileId" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted a file on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/files/get": {
            "post": {
                "description": "Get files from the server, NOT their content",
                "operationId": "get_files",
                "responses": {
                    "200": {
                        "description": "Got files from the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetFilesResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/files/update": {
            "post": {
                "description": "Update a file entry in the database, NOT the content of the file itself.",
                "operationId": "update_file",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/UpdateFileRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated a file on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_UpdateFileResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "description": "Get the health status of the service",
                "operationId": "get_health",
                "responses": {
                    "200": {
                        "description": "Service healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_HealthResBody"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_HealthResBody"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/apps/pickup": {
            "post": {
                "description": "Pickup a job from the server",
                "operationId": "pickup_job",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/PickupJobRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Picked up a job from the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_PickupJobResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/apps/update_status": {
            "post": {
                "description": "Updates the status of a job on the server",
                "operationId": "update_job_status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/UpdateJobStatusRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated job status on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_UpdateJobStatusResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/create": {
            "post": {
                "description": "Create a new job in the database",
                "operationId": "create_job",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/CreateJobRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created a job on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CreateJobResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/delete/{job_id}": {
            "delete": {
                "description": "Delete a job from the database",
                "operationId": "delete_job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "The ID of the job to delete",
                        "required": true,
                        "schema": { "$ref": "#/components/schemas/FilezJobId" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted the job",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/get": {
            "post": {
                "description": "Get a job from the database",
                "operationId": "get_job",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GetJobRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Got a job from the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetJobResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/list": {
            "post": {
                "description": "List jobs from the database",
                "operationId": "list_jobs",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/ListJobsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListJobsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/update": {
            "post": {
                "description": "Update a job in the database",
                "operationId": "update_job",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/UpdateJobRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated a job on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_UpdateJobResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/storage_locations/list": {
            "post": {
                "description": "List storage locations from the database",
                "operationId": "list_storage_locations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListStorageLocationsRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed Storage Locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListStorageLocationsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/storage_quotas/create": {
            "post": {
                "description": "Create a new storage quota in the database",
                "operationId": "create_storage_quota",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateStorageQuotaRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created the new storage quota",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CreateStorageQuotaResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/storage_quotas/delete/{storage_quota_id}": {
            "delete": {
                "description": "Delete a storage quota by its ID",
                "operationId": "delete_storage_quota",
                "parameters": [
                    {
                        "name": "storage_quota_id",
                        "in": "path",
                        "description": "The ID of the storage quota to delete",
                        "required": true,
                        "schema": { "$ref": "#/components/schemas/StorageQuotaId" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted the storage quota",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/storage_quotas/get": {
            "post": {
                "description": "Get storage quotas by their IDs",
                "operationId": "get_storage_quotas",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GetStorageQuotaRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Got the storage quotas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetStorageQuotaResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/storage_quotas/list": {
            "post": {
                "description": "List storage quotas",
                "operationId": "list_storage_quotas",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListStorageQuotasRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed storage quotas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListStorageQuotasResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/storage_quotas/update": {
            "put": {
                "description": "Update an existing storage quota in the database",
                "operationId": "update_storage_quota",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateStorageQuotaRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the storage quota",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_UpdateStorageQuotaResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tags/get": {
            "post": {
                "description": "Get the tags for the specified resources, resources must be of the same type per query.",
                "operationId": "get_tags",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GetTagsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Got the tags for the specified resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetTagsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetTagsResponseBody"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tags/update": {
            "post": {
                "description": "Update the tags for the specified resources, resources must be of the same type per query. The same operation is applied to all resources in the list.",
                "operationId": "update_tags",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/UpdateTagsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user_groups/create": {
            "post": {
                "description": "Create a new user group in the database",
                "operationId": "create_user_group",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/CreateUserGroupRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created the user group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CreateUserGroupResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user_groups/delete/{user_group_id}": {
            "delete": {
                "description": "Delete a user group by its ID",
                "operationId": "delete_user_group",
                "parameters": [
                    {
                        "name": "user_group_id",
                        "in": "path",
                        "description": "The ID of the user group to delete",
                        "required": true,
                        "schema": { "type": "string", "format": "uuid" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted the user group",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/ApiResponse_String" }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user_groups/get": {
            "post": {
                "description": "Get user groups by their IDs",
                "operationId": "get_user_groups",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GetUserGroupsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Got the user groups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetUserGroupsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user_groups/list": {
            "post": {
                "operationId": "list_user_groups",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/ListUserGroupsRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed user groups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListUserGroupsResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user_groups/list_users": {
            "post": {
                "description": "List users in a user group by the user group ID",
                "operationId": "list_users_by_user_group",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/ListUsersRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed the users in the given group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListUsersResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user_groups/update": {
            "put": {
                "description": "Update an existing user group in the database",
                "operationId": "update_user_group",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/UpdateUserGroupRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the user group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_UpdateUserGroupResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user_groups/update_members": {
            "post": {
                "description": "Update the members of a user group by adding or removing users",
                "operationId": "update_user_group_members",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserGroupMembersRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the members of the user group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/create": {
            "post": {
                "description": "Create a new user in the database",
                "operationId": "create_user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/CreateUserRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created the User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_CreateUserResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/delete": {
            "post": {
                "description": "Delete a user from the database",
                "operationId": "delete_user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/DeleteUserRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Deleted the User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/get": {
            "post": {
                "description": "Get users by their IDs",
                "operationId": "get_users",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GetUsersReqBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Got Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetUsersResBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/get_own": {
            "post": {
                "description": "Get own user",
                "operationId": "get_own_user",
                "responses": {
                    "200": {
                        "description": "Got own user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_GetOwnUserBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/list": {
            "post": {
                "description": "List users in the database with pagination and sorting",
                "operationId": "list_users",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/ListUsersRequestBody" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Listed Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_ListUsersResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse_EmptyApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccessPolicy": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "owner_id",
                    "created_time",
                    "modified_time",
                    "subject_type",
                    "subject_id",
                    "context_app_ids",
                    "resource_type",
                    "actions",
                    "effect"
                ],
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/AccessPolicyAction" }
                    },
                    "context_app_ids": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/MowsAppId" },
                        "description": "The IDs of the application this policy is associated with"
                    },
                    "created_time": { "type": "string", "format": "date-time" },
                    "effect": { "$ref": "#/components/schemas/AccessPolicyEffect" },
                    "id": { "$ref": "#/components/schemas/AccessPolicyId" },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "name": { "type": "string" },
                    "owner_id": { "$ref": "#/components/schemas/FilezUserId" },
                    "resource_id": {
                        "type": ["string", "null"],
                        "format": "uuid",
                        "description": "The ID of the resource this policy applies to, if no resource ID is provided, the policy is a type level policy, allowing for example the creation of a resource of that type."
                    },
                    "resource_type": { "$ref": "#/components/schemas/AccessPolicyResourceType" },
                    "subject_id": { "$ref": "#/components/schemas/AccessPolicySubjectId" },
                    "subject_type": { "$ref": "#/components/schemas/AccessPolicySubjectType" }
                }
            },
            "AccessPolicyAction": {
                "type": "string",
                "enum": [
                    "FilezFilesCreate",
                    "FilezFilesDelete",
                    "FilezFilesGet",
                    "FilezFilesUpdate",
                    "FilezFilesVersionsContentGet",
                    "FilezFilesVersionsContentTusHead",
                    "FilezFilesVersionsContentTusPatch",
                    "FilezFilesVersionsDelete",
                    "FilezFilesVersionsGet",
                    "FilezFilesVersionsUpdate",
                    "FilezFilesVersionsCreate",
                    "UsersGet",
                    "UsersList",
                    "UsersCreate",
                    "UsersUpdate",
                    "UsersDelete",
                    "FileGroupsCreate",
                    "FileGroupsGet",
                    "FileGroupsUpdate",
                    "FileGroupsDelete",
                    "FileGroupsList",
                    "FileGroupsListFiles",
                    "FileGroupsUpdateMembers",
                    "UserGroupsCreate",
                    "UserGroupsGet",
                    "UserGroupsUpdate",
                    "UserGroupsDelete",
                    "UserGroupsList",
                    "UserGroupsListUsers",
                    "UserGroupsUpdateMembers",
                    "AccessPoliciesCreate",
                    "AccessPoliciesGet",
                    "AccessPoliciesUpdate",
                    "AccessPoliciesDelete",
                    "AccessPoliciesList",
                    "StorageQuotasCreate",
                    "StorageQuotasGet",
                    "StorageQuotasUpdate",
                    "StorageQuotasDelete",
                    "StorageQuotasList",
                    "StorageLocationsGet",
                    "StorageLocationsList",
                    "TagsUpdate",
                    "TagsGet",
                    "FilezJobsCreate",
                    "FilezJobsGet",
                    "FilezJobsUpdate",
                    "FilezJobsDelete",
                    "FilezJobsList",
                    "FilezJobsPickup",
                    "FilezAppsGet",
                    "FilezAppsList"
                ]
            },
            "AccessPolicyEffect": { "type": "string", "enum": ["Deny", "Allow"] },
            "AccessPolicyId": { "type": "string", "format": "uuid" },
            "AccessPolicyResourceType": {
                "type": "string",
                "enum": [
                    "File",
                    "FileGroup",
                    "User",
                    "UserGroup",
                    "StorageLocation",
                    "AccessPolicy",
                    "StorageQuota",
                    "FilezJob",
                    "MowsApp"
                ]
            },
            "AccessPolicySubjectId": { "type": "string", "format": "uuid" },
            "AccessPolicySubjectType": {
                "type": "string",
                "enum": ["User", "UserGroup", "ServerMember", "Public"]
            },
            "ApiResponseStatus": {
                "oneOf": [
                    { "type": "string", "enum": ["Success"] },
                    {
                        "type": "object",
                        "required": ["Error"],
                        "properties": { "Error": { "type": "string" } }
                    }
                ]
            },
            "ApiResponse_CheckResourceAccessResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["auth_evaluations"],
                        "properties": {
                            "auth_evaluations": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/AuthEvaluation" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_CreateAccessPolicyResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["created_access_policy"],
                        "properties": {
                            "created_access_policy": { "$ref": "#/components/schemas/AccessPolicy" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_CreateFileGroupResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["created_file_group"],
                        "properties": {
                            "created_file_group": { "$ref": "#/components/schemas/FileGroup" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_CreateFileResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["created_file"],
                        "properties": {
                            "created_file": { "$ref": "#/components/schemas/FilezFile" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_CreateFileVersionResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["created_file_version"],
                        "properties": {
                            "created_file_version": { "$ref": "#/components/schemas/FileVersion" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_CreateJobResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["created_job"],
                        "properties": { "created_job": { "$ref": "#/components/schemas/FilezJob" } }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_CreateStorageQuotaResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["created_storage_quota"],
                        "properties": {
                            "created_storage_quota": { "$ref": "#/components/schemas/StorageQuota" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_CreateUserGroupResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["created_user_group"],
                        "properties": {
                            "created_user_group": { "$ref": "#/components/schemas/UserGroup" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_CreateUserResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["created_user"],
                        "properties": {
                            "created_user": { "$ref": "#/components/schemas/FilezUser" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_EmptyApiResponse": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": { "type": "object" },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_FileVersionSizeExceededErrorBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["allowed", "received"],
                        "properties": {
                            "allowed": { "type": "integer", "format": "int64", "minimum": 0 },
                            "received": { "type": "integer", "format": "int64", "minimum": 0 }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetAccessPolicyResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["access_policies"],
                        "properties": {
                            "access_policies": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/AccessPolicy" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetAppsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["apps"],
                        "properties": {
                            "apps": {
                                "type": "object",
                                "additionalProperties": { "$ref": "#/components/schemas/MowsApp" },
                                "propertyNames": { "type": "string", "format": "uuid" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetFileGroupsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["file_groups"],
                        "properties": {
                            "file_groups": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/FileGroup" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetFileVersionsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["file_versions"],
                        "properties": {
                            "file_versions": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/FileVersion" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetFilesResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["files"],
                        "properties": {
                            "files": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/FilezFile" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetJobResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["job"],
                        "properties": { "job": { "$ref": "#/components/schemas/FilezJob" } }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetOwnUserBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["user"],
                        "properties": { "user": { "$ref": "#/components/schemas/FilezUser" } }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetStorageQuotaResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["storage_quotas"],
                        "properties": {
                            "storage_quotas": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/StorageQuota" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetTagsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["resource_tags"],
                        "properties": {
                            "resource_tags": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": { "type": "string" },
                                    "propertyNames": { "type": "string" }
                                },
                                "propertyNames": { "type": "string", "format": "uuid" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetUserGroupsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["user_groups"],
                        "properties": {
                            "user_groups": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/UserGroup" },
                                "description": "The retrieved user groups"
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_GetUsersResBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["users_meta"],
                        "properties": {
                            "users_meta": {
                                "type": "object",
                                "additionalProperties": { "$ref": "#/components/schemas/UserMeta" },
                                "propertyNames": { "type": "string", "format": "uuid" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_HealthResBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": [
                            "all_healthy",
                            "database",
                            "zitadel",
                            "controller",
                            "storage_locations"
                        ],
                        "properties": {
                            "all_healthy": { "type": "boolean" },
                            "controller": { "$ref": "#/components/schemas/HealthStatus" },
                            "database": { "$ref": "#/components/schemas/HealthStatus" },
                            "storage_locations": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/HealthStatus"
                                },
                                "propertyNames": { "type": "string", "format": "uuid" }
                            },
                            "zitadel": { "$ref": "#/components/schemas/HealthStatus" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListAccessPoliciesResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["total_count", "access_policies"],
                        "properties": {
                            "access_policies": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/AccessPolicy" }
                            },
                            "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListAppsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["apps"],
                        "properties": {
                            "apps": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/MowsApp" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListFileGroupsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["file_groups", "total_count"],
                        "properties": {
                            "file_groups": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/FileGroup" }
                            },
                            "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListFilesResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["files", "total_count"],
                        "properties": {
                            "files": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/FilezFile" }
                            },
                            "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListJobsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["jobs", "total_count"],
                        "properties": {
                            "jobs": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/FilezJob" }
                            },
                            "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListStorageLocationsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["storage_locations"],
                        "properties": {
                            "storage_locations": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/StorageLocationListItem" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListStorageQuotasResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["storage_quotas", "total_count"],
                        "properties": {
                            "storage_quotas": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/StorageQuota" }
                            },
                            "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListUserGroupsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["user_groups", "total_count"],
                        "properties": {
                            "total_count": { "type": "integer", "format": "int64", "minimum": 0 },
                            "user_groups": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/UserGroup" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_ListUsersResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["users", "total_count"],
                        "properties": {
                            "total_count": { "type": "integer", "format": "int64", "minimum": 0 },
                            "users": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/FilezUser" }
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_PickupJobResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "job": {
                                "oneOf": [
                                    { "type": "null" },
                                    { "$ref": "#/components/schemas/FilezJob" }
                                ]
                            }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_String": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": { "type": "string" },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_UpdateAccessPolicyResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["updated_access_policy"],
                        "properties": {
                            "updated_access_policy": { "$ref": "#/components/schemas/AccessPolicy" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_UpdateFileGroupResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["updated_file_group"],
                        "properties": {
                            "updated_file_group": { "$ref": "#/components/schemas/FileGroup" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_UpdateFileResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["updated_file"],
                        "properties": {
                            "updated_file": { "$ref": "#/components/schemas/FilezFile" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_UpdateFileVersionsResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["updated_file_version"],
                        "properties": {
                            "updated_file_version": { "$ref": "#/components/schemas/FileVersion" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_UpdateJobResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["job"],
                        "properties": { "job": { "$ref": "#/components/schemas/FilezJob" } }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_UpdateJobStatusResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["updated_job"],
                        "properties": { "updated_job": { "$ref": "#/components/schemas/FilezJob" } }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_UpdateStorageQuotaResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["updated_storage_quota"],
                        "properties": {
                            "updated_storage_quota": { "$ref": "#/components/schemas/StorageQuota" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "ApiResponse_UpdateUserGroupResponseBody": {
                "type": "object",
                "required": ["message", "status"],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": ["updated_user_group"],
                        "properties": {
                            "updated_user_group": { "$ref": "#/components/schemas/UserGroup" }
                        }
                    },
                    "message": { "type": "string" },
                    "status": { "$ref": "#/components/schemas/ApiResponseStatus" }
                }
            },
            "AppType": { "type": "string", "enum": ["frontend", "backend"] },
            "AuthEvaluation": {
                "type": "object",
                "required": ["is_allowed", "reason"],
                "properties": {
                    "is_allowed": { "type": "boolean" },
                    "reason": { "$ref": "#/components/schemas/AuthReason" },
                    "resource_id": { "type": ["string", "null"], "format": "uuid" }
                }
            },
            "AuthReason": {
                "oneOf": [
                    { "type": "string", "enum": ["SuperAdmin"] },
                    { "type": "string", "enum": ["Owned"] },
                    {
                        "type": "object",
                        "required": ["AllowedByPubliclyAccessible"],
                        "properties": {
                            "AllowedByPubliclyAccessible": {
                                "type": "object",
                                "required": ["policy_id"],
                                "properties": {
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["AllowedByServerAccessible"],
                        "properties": {
                            "AllowedByServerAccessible": {
                                "type": "object",
                                "required": ["policy_id"],
                                "properties": {
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["AllowedByDirectUserPolicy"],
                        "properties": {
                            "AllowedByDirectUserPolicy": {
                                "type": "object",
                                "required": ["policy_id"],
                                "properties": {
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["AllowedByDirectUserGroupPolicy"],
                        "properties": {
                            "AllowedByDirectUserGroupPolicy": {
                                "type": "object",
                                "required": ["policy_id", "via_user_group_id"],
                                "properties": {
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" },
                                    "via_user_group_id": {
                                        "$ref": "#/components/schemas/UserGroupId"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["AllowedByResourceGroupUserPolicy"],
                        "properties": {
                            "AllowedByResourceGroupUserPolicy": {
                                "type": "object",
                                "required": ["policy_id", "on_resource_group_id"],
                                "properties": {
                                    "on_resource_group_id": { "type": "string", "format": "uuid" },
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["AllowedByResourceGroupUserGroupPolicy"],
                        "properties": {
                            "AllowedByResourceGroupUserGroupPolicy": {
                                "type": "object",
                                "required": [
                                    "policy_id",
                                    "via_user_group_id",
                                    "on_resource_group_id"
                                ],
                                "properties": {
                                    "on_resource_group_id": { "type": "string", "format": "uuid" },
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" },
                                    "via_user_group_id": {
                                        "$ref": "#/components/schemas/UserGroupId"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["DeniedByPubliclyAccessible"],
                        "properties": {
                            "DeniedByPubliclyAccessible": {
                                "type": "object",
                                "required": ["policy_id"],
                                "properties": {
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["DeniedByServerAccessible"],
                        "properties": {
                            "DeniedByServerAccessible": {
                                "type": "object",
                                "required": ["policy_id"],
                                "properties": {
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["DeniedByDirectUserPolicy"],
                        "properties": {
                            "DeniedByDirectUserPolicy": {
                                "type": "object",
                                "required": ["policy_id"],
                                "properties": {
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["DeniedByDirectUserGroupPolicy"],
                        "properties": {
                            "DeniedByDirectUserGroupPolicy": {
                                "type": "object",
                                "required": ["policy_id", "via_user_group_id"],
                                "properties": {
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" },
                                    "via_user_group_id": {
                                        "$ref": "#/components/schemas/UserGroupId"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["DeniedByResourceGroupUserPolicy"],
                        "properties": {
                            "DeniedByResourceGroupUserPolicy": {
                                "type": "object",
                                "required": ["policy_id", "on_resource_group_id"],
                                "properties": {
                                    "on_resource_group_id": { "type": "string", "format": "uuid" },
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" }
                                }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["DeniedByResourceGroupUserGroupPolicy"],
                        "properties": {
                            "DeniedByResourceGroupUserGroupPolicy": {
                                "type": "object",
                                "required": [
                                    "policy_id",
                                    "via_user_group_id",
                                    "on_resource_group_id"
                                ],
                                "properties": {
                                    "on_resource_group_id": { "type": "string", "format": "uuid" },
                                    "policy_id": { "$ref": "#/components/schemas/AccessPolicyId" },
                                    "via_user_group_id": {
                                        "$ref": "#/components/schemas/UserGroupId"
                                    }
                                }
                            }
                        }
                    },
                    { "type": "string", "enum": ["NoMatchingAllowPolicy"] },
                    { "type": "string", "enum": ["ResourceNotFound"] }
                ]
            },
            "CheckResourceAccessRequestBody": {
                "type": "object",
                "required": ["access_policy_resource_type", "access_policy_action"],
                "properties": {
                    "access_policy_action": { "$ref": "#/components/schemas/AccessPolicyAction" },
                    "access_policy_resource_type": {
                        "$ref": "#/components/schemas/AccessPolicyResourceType"
                    },
                    "requesting_app_origin": { "type": ["string", "null"] },
                    "resource_ids": {
                        "type": ["array", "null"],
                        "items": { "type": "string", "format": "uuid" }
                    }
                }
            },
            "CheckResourceAccessResponseBody": {
                "type": "object",
                "required": ["auth_evaluations"],
                "properties": {
                    "auth_evaluations": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/AuthEvaluation" }
                    }
                }
            },
            "CreateAccessPolicyRequestBody": {
                "type": "object",
                "required": [
                    "access_policy_name",
                    "access_policy_subject_type",
                    "access_policy_subject_id",
                    "context_app_ids",
                    "access_policy_resource_type",
                    "access_policy_actions",
                    "access_policy_effect"
                ],
                "properties": {
                    "access_policy_actions": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/AccessPolicyAction" }
                    },
                    "access_policy_effect": { "$ref": "#/components/schemas/AccessPolicyEffect" },
                    "access_policy_name": { "type": "string", "maxLength": 256 },
                    "access_policy_resource_type": {
                        "$ref": "#/components/schemas/AccessPolicyResourceType"
                    },
                    "access_policy_subject_id": {
                        "$ref": "#/components/schemas/AccessPolicySubjectId"
                    },
                    "access_policy_subject_type": {
                        "$ref": "#/components/schemas/AccessPolicySubjectType"
                    },
                    "context_app_ids": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/MowsAppId" }
                    },
                    "resource_id": { "type": ["string", "null"], "format": "uuid" }
                }
            },
            "CreateAccessPolicyResponseBody": {
                "type": "object",
                "required": ["created_access_policy"],
                "properties": {
                    "created_access_policy": { "$ref": "#/components/schemas/AccessPolicy" }
                }
            },
            "CreateFileGroupRequestBody": {
                "type": "object",
                "required": ["file_group_name", "file_group_type"],
                "properties": {
                    "dynamic_group_rule": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/DynamicGroupRule" }
                        ]
                    },
                    "file_group_name": { "type": "string", "maxLength": 256 },
                    "file_group_type": { "$ref": "#/components/schemas/FileGroupType" }
                }
            },
            "CreateFileGroupResponseBody": {
                "type": "object",
                "required": ["created_file_group"],
                "properties": { "created_file_group": { "$ref": "#/components/schemas/FileGroup" } }
            },
            "CreateFileRequestBody": {
                "type": "object",
                "required": ["file_name"],
                "properties": {
                    "file_name": { "type": "string", "maxLength": 256 },
                    "mime_type": { "type": ["string", "null"] },
                    "time_created": { "type": ["string", "null"], "format": "date-time" },
                    "time_modified": { "type": ["string", "null"], "format": "date-time" }
                }
            },
            "CreateFileResponseBody": {
                "type": "object",
                "required": ["created_file"],
                "properties": { "created_file": { "$ref": "#/components/schemas/FilezFile" } }
            },
            "CreateFileVersionRequestBody": {
                "type": "object",
                "required": [
                    "file_id",
                    "file_version_mime_type",
                    "file_version_metadata",
                    "file_version_size",
                    "storage_quota_id"
                ],
                "properties": {
                    "app_path": { "type": ["string", "null"] },
                    "content_expected_sha256_digest": {
                        "type": ["string", "null"],
                        "description": "Optional SHA256 digest of the file content as a lowercase hexadecimal string.\nOnce the content is fully uploaded it automatically gets validated against this digest.\nAfter successful validation, the versions content_valid field is set to true.",
                        "maxLength": 64,
                        "minLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    },
                    "file_id": {
                        "$ref": "#/components/schemas/FilezFileId",
                        "description": "The ID of the file to create a version for."
                    },
                    "file_version_metadata": { "$ref": "#/components/schemas/FileVersionMetadata" },
                    "file_version_mime_type": {
                        "type": "string",
                        "description": "The MIME type of the file version."
                    },
                    "file_version_number": {
                        "type": ["integer", "null"],
                        "format": "int32",
                        "minimum": 0
                    },
                    "file_version_size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file version in bytes.",
                        "minimum": 0
                    },
                    "storage_quota_id": {
                        "$ref": "#/components/schemas/StorageQuotaId",
                        "description": "The ID of the storage quota to use for this file version."
                    }
                }
            },
            "CreateFileVersionResponseBody": {
                "type": "object",
                "required": ["created_file_version"],
                "properties": {
                    "created_file_version": { "$ref": "#/components/schemas/FileVersion" }
                }
            },
            "CreateJobRequestBody": {
                "type": "object",
                "required": [
                    "job_handling_app_id",
                    "job_name",
                    "job_execution_details",
                    "job_persistence"
                ],
                "properties": {
                    "job_deadline_time": { "type": ["string", "null"], "format": "date-time" },
                    "job_execution_details": {
                        "$ref": "#/components/schemas/JobExecutionInformation"
                    },
                    "job_handling_app_id": { "$ref": "#/components/schemas/MowsAppId" },
                    "job_name": { "type": "string", "maxLength": 256 },
                    "job_persistence": { "$ref": "#/components/schemas/JobPersistenceType" }
                }
            },
            "CreateJobResponseBody": {
                "type": "object",
                "required": ["created_job"],
                "properties": { "created_job": { "$ref": "#/components/schemas/FilezJob" } }
            },
            "CreateStorageQuotaRequestBody": {
                "type": "object",
                "required": [
                    "storage_quota_subject_type",
                    "storage_quota_subject_id",
                    "storage_location_id",
                    "storage_quota_bytes",
                    "storage_quota_name"
                ],
                "properties": {
                    "storage_location_id": { "$ref": "#/components/schemas/StorageLocationId" },
                    "storage_quota_bytes": { "type": "integer", "format": "int64", "minimum": 0 },
                    "storage_quota_name": { "type": "string", "maxLength": 256 },
                    "storage_quota_subject_id": {
                        "$ref": "#/components/schemas/StorageQuotaSubjectId"
                    },
                    "storage_quota_subject_type": {
                        "$ref": "#/components/schemas/StorageQuotaSubjectType"
                    }
                }
            },
            "CreateStorageQuotaResponseBody": {
                "type": "object",
                "required": ["created_storage_quota"],
                "properties": {
                    "created_storage_quota": { "$ref": "#/components/schemas/StorageQuota" }
                }
            },
            "CreateUserGroupRequestBody": {
                "type": "object",
                "required": ["user_group_name"],
                "properties": { "user_group_name": { "type": "string", "maxLength": 256 } }
            },
            "CreateUserGroupResponseBody": {
                "type": "object",
                "required": ["created_user_group"],
                "properties": { "created_user_group": { "$ref": "#/components/schemas/UserGroup" } }
            },
            "CreateUserRequestBody": {
                "type": "object",
                "required": ["email"],
                "properties": { "email": { "type": "string" } }
            },
            "CreateUserResponseBody": {
                "type": "object",
                "required": ["created_user"],
                "properties": { "created_user": { "$ref": "#/components/schemas/FilezUser" } }
            },
            "DeleteUserMethod": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["ById"],
                        "properties": { "ById": { "$ref": "#/components/schemas/FilezUserId" } }
                    },
                    {
                        "type": "object",
                        "required": ["ByExternalId"],
                        "properties": { "ByExternalId": { "type": "string" } }
                    },
                    {
                        "type": "object",
                        "required": ["ByEmail"],
                        "properties": { "ByEmail": { "type": "string" } }
                    }
                ]
            },
            "DeleteUserRequestBody": {
                "type": "object",
                "required": ["delete_user_method"],
                "properties": {
                    "delete_user_method": { "$ref": "#/components/schemas/DeleteUserMethod" }
                }
            },
            "DevResetDatabaseRequestBody": { "type": "object" },
            "DynamicGroupRule": { "type": "object" },
            "EmptyApiResponse": { "type": "object" },
            "FileGroup": {
                "type": "object",
                "required": [
                    "id",
                    "owner_id",
                    "name",
                    "created_time",
                    "modified_time",
                    "group_type"
                ],
                "properties": {
                    "created_time": { "type": "string", "format": "date-time" },
                    "dynamic_group_rule": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/DynamicGroupRule" }
                        ]
                    },
                    "group_type": { "$ref": "#/components/schemas/FileGroupType" },
                    "id": { "$ref": "#/components/schemas/FileGroupId" },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "name": { "type": "string" },
                    "owner_id": { "$ref": "#/components/schemas/FilezUserId" }
                }
            },
            "FileGroupId": { "type": "string", "format": "uuid" },
            "FileGroupType": { "type": "string", "enum": ["Manual", "Dynamic"] },
            "FileMetadata": {
                "type": "object",
                "required": ["private_app_data", "shared_app_data", "extracted_data"],
                "properties": {
                    "default_preview_app_id": {
                        "oneOf": [{ "type": "null" }, { "$ref": "#/components/schemas/MowsAppId" }]
                    },
                    "extracted_data": {
                        "type": "object",
                        "description": "Extracted data from the file, such as text content, metadata, etc.",
                        "additionalProperties": true
                    },
                    "private_app_data": {
                        "type": "object",
                        "description": "Place for apps to store custom data related to the file.\nevery app is identified by its id, and can only access its own data.",
                        "additionalProperties": true
                    },
                    "shared_app_data": {
                        "type": "object",
                        "description": "Apps can provide and request shared app data from other apps on creation",
                        "additionalProperties": true
                    }
                }
            },
            "FileVersion": {
                "type": "object",
                "required": [
                    "id",
                    "file_id",
                    "version",
                    "app_id",
                    "app_path",
                    "mime_type",
                    "metadata",
                    "created_time",
                    "modified_time",
                    "size",
                    "storage_location_id",
                    "storage_quota_id",
                    "content_valid"
                ],
                "properties": {
                    "app_id": { "$ref": "#/components/schemas/MowsAppId" },
                    "app_path": { "type": "string" },
                    "content_expected_sha256_digest": { "type": ["string", "null"] },
                    "content_valid": { "type": "boolean" },
                    "created_time": { "type": "string", "format": "date-time" },
                    "existing_content_bytes": { "type": ["integer", "null"], "format": "int64" },
                    "file_id": { "$ref": "#/components/schemas/FilezFileId" },
                    "id": { "$ref": "#/components/schemas/FileVersionId" },
                    "metadata": { "$ref": "#/components/schemas/FileVersionMetadata" },
                    "mime_type": { "type": "string" },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "size": { "type": "integer", "format": "int64" },
                    "storage_location_id": { "$ref": "#/components/schemas/StorageLocationId" },
                    "storage_quota_id": { "$ref": "#/components/schemas/StorageQuotaId" },
                    "version": { "type": "integer", "format": "int32" }
                }
            },
            "FileVersionId": { "type": "string", "format": "uuid" },
            "FileVersionMetadata": { "type": "object" },
            "FileVersionSizeExceededErrorBody": {
                "type": "object",
                "required": ["allowed", "received"],
                "properties": {
                    "allowed": { "type": "integer", "format": "int64", "minimum": 0 },
                    "received": { "type": "integer", "format": "int64", "minimum": 0 }
                }
            },
            "FilezFile": {
                "type": "object",
                "required": [
                    "id",
                    "owner_id",
                    "mime_type",
                    "name",
                    "created_time",
                    "modified_time",
                    "metadata"
                ],
                "properties": {
                    "created_time": { "type": "string", "format": "date-time" },
                    "id": { "$ref": "#/components/schemas/FilezFileId" },
                    "metadata": { "$ref": "#/components/schemas/FileMetadata" },
                    "mime_type": { "type": "string" },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "name": { "type": "string" },
                    "owner_id": { "$ref": "#/components/schemas/FilezUserId" }
                }
            },
            "FilezFileId": { "type": "string", "format": "uuid" },
            "FilezJob": {
                "type": "object",
                "required": [
                    "id",
                    "owner_id",
                    "app_id",
                    "name",
                    "status",
                    "execution_information",
                    "persistence",
                    "created_time",
                    "modified_time"
                ],
                "properties": {
                    "app_id": {
                        "$ref": "#/components/schemas/MowsAppId",
                        "description": "The app that should handle the job"
                    },
                    "app_instance_last_seen_time": {
                        "type": ["string", "null"],
                        "format": "date-time",
                        "description": "The last time the app instance has been seen by the server\nThis is used to determine if the app instance is still alive and can handle the job"
                    },
                    "assigned_app_runtime_instance_id": {
                        "type": ["string", "null"],
                        "description": "After the job is picked up by the app, this field will be set to the app instance id, created from the kubernetes pod UUID and a random string that the app generates on startup"
                    },
                    "created_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the job was created in the database"
                    },
                    "deadline_time": {
                        "type": ["string", "null"],
                        "format": "date-time",
                        "description": "After the deadline the job will be marked as finished and failed if not completed"
                    },
                    "end_time": {
                        "type": ["string", "null"],
                        "format": "date-time",
                        "description": "When the job was finished, either successfully or failed"
                    },
                    "execution_information": {
                        "$ref": "#/components/schemas/JobExecutionInformation",
                        "description": "Details relevant for the execution of the job"
                    },
                    "id": { "$ref": "#/components/schemas/FilezJobId" },
                    "modified_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the job was last modified in the database"
                    },
                    "name": { "type": "string" },
                    "owner_id": { "$ref": "#/components/schemas/FilezUserId" },
                    "persistence": { "$ref": "#/components/schemas/JobPersistenceType" },
                    "start_time": {
                        "type": ["string", "null"],
                        "format": "date-time",
                        "description": "When the job was started, either automatically or manually"
                    },
                    "status": {
                        "$ref": "#/components/schemas/JobStatus",
                        "description": "The current status of the job"
                    },
                    "status_details": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/JobStatusDetails" }
                        ]
                    }
                }
            },
            "FilezJobId": { "type": "string", "format": "uuid" },
            "FilezUser": {
                "type": "object",
                "required": [
                    "id",
                    "display_name",
                    "created_time",
                    "modified_time",
                    "deleted",
                    "user_type"
                ],
                "properties": {
                    "created_by": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/FilezUserId" }
                        ]
                    },
                    "created_time": { "type": "string", "format": "date-time" },
                    "deleted": { "type": "boolean" },
                    "display_name": {
                        "type": "string",
                        "description": "The display name of the user, updated from the external identity provider on each login"
                    },
                    "external_user_id": {
                        "type": ["string", "null"],
                        "description": "The external user ID, e.g. from ZITADEL or other identity providers"
                    },
                    "id": { "$ref": "#/components/schemas/FilezUserId" },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "pre_identifier_email": {
                        "type": ["string", "null"],
                        "description": "Used to create a user before the external user ID is known, when the user then logs in with a verified email address the email is switched to the external user ID"
                    },
                    "profile_picture": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/FilezFileId" }
                        ]
                    },
                    "user_type": { "$ref": "#/components/schemas/FilezUserType" }
                }
            },
            "FilezUserId": { "type": "string", "format": "uuid" },
            "FilezUserType": { "type": "string", "enum": ["SuperAdmin", "Regular", "KeyAccess"] },
            "GetAccessPolicyRequestBody": {
                "type": "object",
                "required": ["access_policy_ids"],
                "properties": {
                    "access_policy_ids": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/AccessPolicyId" }
                    }
                }
            },
            "GetAccessPolicyResponseBody": {
                "type": "object",
                "required": ["access_policies"],
                "properties": {
                    "access_policies": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/AccessPolicy" }
                    }
                }
            },
            "GetAppsResponseBody": {
                "type": "object",
                "required": ["apps"],
                "properties": {
                    "apps": {
                        "type": "object",
                        "additionalProperties": { "$ref": "#/components/schemas/MowsApp" },
                        "propertyNames": { "type": "string", "format": "uuid" }
                    }
                }
            },
            "GetFileGroupsRequestBody": {
                "type": "object",
                "required": ["file_group_ids"],
                "properties": {
                    "file_group_ids": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FileGroupId" }
                    }
                }
            },
            "GetFileGroupsResponseBody": {
                "type": "object",
                "required": ["file_groups"],
                "properties": {
                    "file_groups": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FileGroup" }
                    }
                }
            },
            "GetFileVersionsRequestBody": {
                "type": "object",
                "required": ["file_version_ids"],
                "properties": {
                    "file_version_ids": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FileVersionId" }
                    }
                }
            },
            "GetFileVersionsResponseBody": {
                "type": "object",
                "required": ["file_versions"],
                "properties": {
                    "file_versions": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FileVersion" }
                    }
                }
            },
            "GetFilesResponseBody": {
                "type": "object",
                "required": ["files"],
                "properties": {
                    "files": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FilezFile" }
                    }
                }
            },
            "GetJobRequestBody": {
                "type": "object",
                "required": ["job_id"],
                "properties": { "job_id": { "$ref": "#/components/schemas/FilezJobId" } }
            },
            "GetJobResponseBody": {
                "type": "object",
                "required": ["job"],
                "properties": { "job": { "$ref": "#/components/schemas/FilezJob" } }
            },
            "GetOwnUserBody": {
                "type": "object",
                "required": ["user"],
                "properties": { "user": { "$ref": "#/components/schemas/FilezUser" } }
            },
            "GetStorageQuotaRequestBody": {
                "type": "object",
                "required": ["storage_quota_ids"],
                "properties": {
                    "storage_quota_ids": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/StorageQuotaId" }
                    }
                }
            },
            "GetStorageQuotaResponseBody": {
                "type": "object",
                "required": ["storage_quotas"],
                "properties": {
                    "storage_quotas": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/StorageQuota" }
                    }
                }
            },
            "GetTagsRequestBody": {
                "type": "object",
                "required": ["tag_resource_type", "resource_ids"],
                "properties": {
                    "resource_ids": {
                        "type": "array",
                        "items": { "type": "string", "format": "uuid" }
                    },
                    "tag_resource_type": { "$ref": "#/components/schemas/TagResourceType" }
                }
            },
            "GetTagsResponseBody": {
                "type": "object",
                "required": ["resource_tags"],
                "properties": {
                    "resource_tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": { "type": "string" },
                            "propertyNames": { "type": "string" }
                        },
                        "propertyNames": { "type": "string", "format": "uuid" }
                    }
                }
            },
            "GetUserGroupsRequestBody": {
                "type": "object",
                "required": ["user_group_ids"],
                "properties": {
                    "user_group_ids": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/UserGroupId" },
                        "description": "The IDs of the user groups to retrieve"
                    }
                }
            },
            "GetUserGroupsResponseBody": {
                "type": "object",
                "required": ["user_groups"],
                "properties": {
                    "user_groups": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/UserGroup" },
                        "description": "The retrieved user groups"
                    }
                }
            },
            "GetUsersReqBody": {
                "type": "object",
                "required": ["user_ids"],
                "properties": {
                    "user_ids": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FilezUserId" }
                    }
                }
            },
            "GetUsersResBody": {
                "type": "object",
                "required": ["users_meta"],
                "properties": {
                    "users_meta": {
                        "type": "object",
                        "additionalProperties": { "$ref": "#/components/schemas/UserMeta" },
                        "propertyNames": { "type": "string", "format": "uuid" }
                    }
                }
            },
            "HealthResBody": {
                "type": "object",
                "required": [
                    "all_healthy",
                    "database",
                    "zitadel",
                    "controller",
                    "storage_locations"
                ],
                "properties": {
                    "all_healthy": { "type": "boolean" },
                    "controller": { "$ref": "#/components/schemas/HealthStatus" },
                    "database": { "$ref": "#/components/schemas/HealthStatus" },
                    "storage_locations": {
                        "type": "object",
                        "additionalProperties": { "$ref": "#/components/schemas/HealthStatus" },
                        "propertyNames": { "type": "string", "format": "uuid" }
                    },
                    "zitadel": { "$ref": "#/components/schemas/HealthStatus" }
                }
            },
            "HealthStatus": {
                "type": "object",
                "required": ["healthy", "response"],
                "properties": { "healthy": { "type": "boolean" }, "response": { "type": "string" } }
            },
            "JobExecutionInformation": {
                "type": "object",
                "required": ["job_type"],
                "properties": { "job_type": { "$ref": "#/components/schemas/JobType" } }
            },
            "JobPersistenceType": { "type": "string", "enum": ["Temporary", "Persistent"] },
            "JobStatus": {
                "type": "string",
                "enum": ["Created", "InProgress", "Completed", "Failed", "Cancelled"]
            },
            "JobStatusDetails": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["Created"],
                        "properties": {
                            "Created": { "$ref": "#/components/schemas/JobStatusDetailsCreated" }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["InProgress"],
                        "properties": {
                            "InProgress": {
                                "$ref": "#/components/schemas/JobStatusDetailsInProgress"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Completed"],
                        "properties": {
                            "Completed": {
                                "$ref": "#/components/schemas/JobStatusDetailsCompleted"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Failed"],
                        "properties": {
                            "Failed": { "$ref": "#/components/schemas/JobStatusDetailsFailed" }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Cancelled"],
                        "properties": {
                            "Cancelled": {
                                "$ref": "#/components/schemas/JobStatusDetailsCancelled"
                            }
                        }
                    }
                ]
            },
            "JobStatusDetailsCancelled": {
                "type": "object",
                "required": ["message"],
                "properties": {
                    "message": { "type": "string" },
                    "reason": { "type": ["string", "null"] }
                }
            },
            "JobStatusDetailsCompleted": {
                "type": "object",
                "required": ["message"],
                "properties": { "message": { "type": "string" } }
            },
            "JobStatusDetailsCreated": {
                "type": "object",
                "required": ["message"],
                "properties": { "message": { "type": "string" } }
            },
            "JobStatusDetailsFailed": {
                "type": "object",
                "required": ["message"],
                "properties": {
                    "error": { "type": ["string", "null"] },
                    "message": { "type": "string" }
                }
            },
            "JobStatusDetailsInProgress": {
                "type": "object",
                "required": ["message"],
                "properties": { "message": { "type": "string" } }
            },
            "JobType": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["CreatePreview"],
                        "properties": {
                            "CreatePreview": { "$ref": "#/components/schemas/JobTypeCreatePreview" }
                        }
                    }
                ]
            },
            "JobTypeCreatePreview": {
                "type": "object",
                "description": "Allows the app to create a set of previews for a existing file_version_number and file_id",
                "required": [
                    "file_id",
                    "file_version_number",
                    "storage_location_id",
                    "storage_quota_id",
                    "allowed_size_bytes",
                    "allowed_number_of_previews",
                    "allowed_mime_types",
                    "preview_config"
                ],
                "properties": {
                    "allowed_mime_types": { "type": "array", "items": { "type": "string" } },
                    "allowed_number_of_previews": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "allowed_size_bytes": { "type": "integer", "format": "int64", "minimum": 0 },
                    "file_id": { "$ref": "#/components/schemas/FilezFileId" },
                    "file_version_number": { "type": "integer", "format": "int32", "minimum": 0 },
                    "preview_config": { "type": "object" },
                    "storage_location_id": { "$ref": "#/components/schemas/StorageLocationId" },
                    "storage_quota_id": { "$ref": "#/components/schemas/StorageQuotaId" }
                }
            },
            "ListAccessPoliciesRequestBody": {
                "type": "object",
                "properties": {
                    "from_index": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "limit": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "sort_by": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/ListAccessPoliciesSortBy" }
                        ]
                    },
                    "sort_order": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    }
                }
            },
            "ListAccessPoliciesResponseBody": {
                "type": "object",
                "required": ["total_count", "access_policies"],
                "properties": {
                    "access_policies": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/AccessPolicy" }
                    },
                    "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                }
            },
            "ListAccessPoliciesSortBy": {
                "type": "string",
                "enum": ["CreatedTime", "ModifiedTime", "Name"]
            },
            "ListAppsRequestBody": { "type": "object" },
            "ListAppsResponseBody": {
                "type": "object",
                "required": ["apps"],
                "properties": {
                    "apps": { "type": "array", "items": { "$ref": "#/components/schemas/MowsApp" } }
                }
            },
            "ListFileGroupsRequestBody": {
                "type": "object",
                "properties": {
                    "from_index": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "limit": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "sort_by": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/ListFileGroupsSortBy" }
                        ]
                    },
                    "sort_order": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    }
                }
            },
            "ListFileGroupsResponseBody": {
                "type": "object",
                "required": ["file_groups", "total_count"],
                "properties": {
                    "file_groups": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FileGroup" }
                    },
                    "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                }
            },
            "ListFileGroupsSortBy": {
                "type": "string",
                "enum": ["Name", "CreatedTime", "ModifiedTime"]
            },
            "ListFilesRequestBody": {
                "type": "object",
                "required": ["file_group_id"],
                "properties": {
                    "file_group_id": { "$ref": "#/components/schemas/FileGroupId" },
                    "from_index": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "limit": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "sort": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/ListFilesSorting" }
                        ]
                    }
                }
            },
            "ListFilesResponseBody": {
                "type": "object",
                "required": ["files", "total_count"],
                "properties": {
                    "files": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FilezFile" }
                    },
                    "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                }
            },
            "ListFilesSortBy": {
                "type": "string",
                "enum": ["Name", "CreatedTime", "ModifiedTime"]
            },
            "ListFilesSortOrder": {
                "type": "object",
                "required": ["sort_by"],
                "properties": {
                    "sort_by": { "$ref": "#/components/schemas/ListFilesSortBy" },
                    "sort_order": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    }
                }
            },
            "ListFilesSorting": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["StoredSortOrder"],
                        "properties": {
                            "StoredSortOrder": {
                                "$ref": "#/components/schemas/ListFilesStoredSortOrder"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["SortOrder"],
                        "properties": {
                            "SortOrder": { "$ref": "#/components/schemas/ListFilesSortOrder" }
                        }
                    }
                ]
            },
            "ListFilesStoredSortOrder": {
                "type": "object",
                "required": ["stored_sort_order_id"],
                "properties": {
                    "direction": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    },
                    "stored_sort_order_id": { "type": "string", "format": "uuid" }
                }
            },
            "ListJobsRequestBody": {
                "type": "object",
                "properties": {
                    "from_index": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "limit": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "sort_by": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/ListJobsSortBy" }
                        ]
                    },
                    "sort_order": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    }
                }
            },
            "ListJobsResponseBody": {
                "type": "object",
                "required": ["jobs", "total_count"],
                "properties": {
                    "jobs": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FilezJob" }
                    },
                    "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                }
            },
            "ListJobsSortBy": { "type": "string", "enum": ["Name", "CreatedTime", "ModifiedTime"] },
            "ListStorageLocationsRequestBody": {
                "type": "object",
                "properties": {
                    "sort_by": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/ListStorageLocationsSortBy" }
                        ]
                    },
                    "sort_order": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    }
                }
            },
            "ListStorageLocationsResponseBody": {
                "type": "object",
                "required": ["storage_locations"],
                "properties": {
                    "storage_locations": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/StorageLocationListItem" }
                    }
                }
            },
            "ListStorageLocationsSortBy": {
                "type": "string",
                "enum": ["CreatedTime", "ModifiedTime", "Name"]
            },
            "ListStorageQuotasRequestBody": {
                "type": "object",
                "properties": {
                    "from_index": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "limit": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "sort_by": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/ListStorageQuotasSortBy" }
                        ]
                    },
                    "sort_order": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    }
                }
            },
            "ListStorageQuotasResponseBody": {
                "type": "object",
                "required": ["storage_quotas", "total_count"],
                "properties": {
                    "storage_quotas": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/StorageQuota" }
                    },
                    "total_count": { "type": "integer", "format": "int64", "minimum": 0 }
                }
            },
            "ListStorageQuotasSortBy": {
                "type": "string",
                "enum": [
                    "CreatedTime",
                    "ModifiedTime",
                    "SubjectType",
                    "SubjectId",
                    "StorageLocationId"
                ]
            },
            "ListUserGroupsRequestBody": {
                "type": "object",
                "properties": {
                    "from_index": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "limit": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "sort_by": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/ListUserGroupsSortBy" }
                        ]
                    },
                    "sort_order": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    }
                }
            },
            "ListUserGroupsResponseBody": {
                "type": "object",
                "required": ["user_groups", "total_count"],
                "properties": {
                    "total_count": { "type": "integer", "format": "int64", "minimum": 0 },
                    "user_groups": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/UserGroup" }
                    }
                }
            },
            "ListUserGroupsSortBy": {
                "type": "string",
                "enum": ["Name", "CreatedTime", "ModifiedTime"]
            },
            "ListUsersRequestBody": {
                "type": "object",
                "required": ["user_group_id"],
                "properties": {
                    "from_index": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "limit": { "type": ["integer", "null"], "format": "int64", "minimum": 0 },
                    "sort_by": { "type": ["string", "null"] },
                    "sort_order": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/SortDirection" }
                        ]
                    },
                    "user_group_id": { "$ref": "#/components/schemas/UserGroupId" }
                }
            },
            "ListUsersResponseBody": {
                "type": "object",
                "required": ["users", "total_count"],
                "properties": {
                    "total_count": { "type": "integer", "format": "int64", "minimum": 0 },
                    "users": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FilezUser" }
                    }
                }
            },
            "ListUsersSortBy": {
                "type": "string",
                "enum": ["CreatedTime", "ModifiedTime", "Name"]
            },
            "ListedFilezUser": {
                "type": "object",
                "required": ["id", "display_name", "created_time"],
                "properties": {
                    "created_time": { "type": "string", "format": "date-time" },
                    "display_name": { "type": "string" },
                    "id": { "$ref": "#/components/schemas/FilezUserId" }
                }
            },
            "MowsApp": {
                "type": "object",
                "description": "# Backend Apps\nPods can authenticate as apps using their Kubernetes service account token\nBackend apps can act on behalf of users by picking up jobs created by users\n# Frontend Apps\nFrontend Apps are recognized by their origin that is sent with the browser request\nThey can act on behalf of users if an access policy allows it",
                "required": ["id", "name", "trusted", "created_time", "modified_time", "app_type"],
                "properties": {
                    "app_type": { "$ref": "#/components/schemas/AppType" },
                    "created_time": { "type": "string", "format": "date-time" },
                    "description": { "type": ["string", "null"] },
                    "id": {
                        "$ref": "#/components/schemas/MowsAppId",
                        "description": "Unique identifier for the app in the database, this is used to identify the app in all database operations"
                    },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "name": {
                        "type": "string",
                        "description": "Name and Namespace of the app in Kubernetes\nRenaming an app in Kubernetes will not change the name in the database but create a new app with the new name\nGenerally the name should not be changed, if it is it can be manually adjusted in the database"
                    },
                    "origins": {
                        "type": ["array", "null"],
                        "items": { "type": "string" },
                        "description": "Origins are used to identify the app in the browser, all origins must be unique across all apps\nIf an app has no origins, it is considered a backend app"
                    },
                    "trusted": {
                        "type": "boolean",
                        "description": "If a app is marked as trusted, it can access all resources without any restrictions"
                    }
                }
            },
            "MowsAppId": { "type": "string", "format": "uuid" },
            "PickupJobRequestBody": { "type": "object" },
            "PickupJobResponseBody": {
                "type": "object",
                "properties": {
                    "job": {
                        "oneOf": [{ "type": "null" }, { "$ref": "#/components/schemas/FilezJob" }]
                    }
                }
            },
            "SortDirection": { "type": "string", "enum": ["Ascending", "Descending"] },
            "StorageLocationId": { "type": "string", "format": "uuid" },
            "StorageLocationListItem": {
                "type": "object",
                "required": ["id", "name", "created_time", "modified_time"],
                "properties": {
                    "created_time": { "type": "string", "format": "date-time" },
                    "id": { "$ref": "#/components/schemas/StorageLocationId" },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "name": { "type": "string" }
                }
            },
            "StorageQuota": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "owner_id",
                    "subject_type",
                    "subject_id",
                    "storage_location_id",
                    "quota_bytes",
                    "created_time",
                    "modified_time"
                ],
                "properties": {
                    "created_time": { "type": "string", "format": "date-time" },
                    "id": { "$ref": "#/components/schemas/StorageQuotaId" },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "name": { "type": "string" },
                    "owner_id": { "$ref": "#/components/schemas/FilezUserId" },
                    "quota_bytes": { "type": "integer", "format": "int64" },
                    "storage_location_id": { "$ref": "#/components/schemas/StorageLocationId" },
                    "subject_id": { "$ref": "#/components/schemas/StorageQuotaSubjectId" },
                    "subject_type": { "$ref": "#/components/schemas/StorageQuotaSubjectType" }
                }
            },
            "StorageQuotaId": { "type": "string", "format": "uuid" },
            "StorageQuotaSubjectId": { "type": "string", "format": "uuid" },
            "StorageQuotaSubjectType": { "type": "string", "enum": ["User", "UserGroup"] },
            "TagResourceType": {
                "type": "string",
                "enum": [
                    "File",
                    "FileVersion",
                    "FileGroup",
                    "User",
                    "UserGroup",
                    "StorageLocation",
                    "AccessPolicy",
                    "StorageQuota"
                ]
            },
            "UpdateAccessPolicyChangeset": {
                "type": "object",
                "properties": {
                    "new_access_policy_actions": {
                        "type": ["array", "null"],
                        "items": { "$ref": "#/components/schemas/AccessPolicyAction" }
                    },
                    "new_access_policy_effect": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/AccessPolicyEffect" }
                        ]
                    },
                    "new_access_policy_name": { "type": ["string", "null"], "maxLength": 256 },
                    "new_access_policy_resource_type": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/AccessPolicyResourceType" }
                        ]
                    },
                    "new_access_policy_subject_id": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/AccessPolicySubjectId" }
                        ]
                    },
                    "new_access_policy_subject_type": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/AccessPolicySubjectType" }
                        ]
                    },
                    "new_context_app_ids": {
                        "type": ["array", "null"],
                        "items": { "$ref": "#/components/schemas/MowsAppId" }
                    },
                    "new_resource_id": { "type": ["string", "null"], "format": "uuid" }
                }
            },
            "UpdateAccessPolicyRequestBody": {
                "type": "object",
                "required": ["access_policy_id", "changeset"],
                "properties": {
                    "access_policy_id": { "$ref": "#/components/schemas/AccessPolicyId" },
                    "changeset": { "$ref": "#/components/schemas/UpdateAccessPolicyChangeset" }
                }
            },
            "UpdateAccessPolicyResponseBody": {
                "type": "object",
                "required": ["updated_access_policy"],
                "properties": {
                    "updated_access_policy": { "$ref": "#/components/schemas/AccessPolicy" }
                }
            },
            "UpdateFileChangeset": {
                "type": "object",
                "properties": {
                    "new_file_metadata": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/FileMetadata" }
                        ]
                    },
                    "new_file_mime_type": { "type": ["string", "null"] },
                    "new_file_name": { "type": ["string", "null"], "maxLength": 256 }
                }
            },
            "UpdateFileGroupChangeset": {
                "type": "object",
                "properties": {
                    "new_file_group_name": { "type": ["string", "null"], "maxLength": 256 }
                }
            },
            "UpdateFileGroupMembersRequestBody": {
                "type": "object",
                "required": ["file_group_id"],
                "properties": {
                    "file_group_id": { "$ref": "#/components/schemas/FileGroupId" },
                    "files_to_add": {
                        "type": ["array", "null"],
                        "items": { "$ref": "#/components/schemas/FilezFileId" }
                    },
                    "files_to_remove": {
                        "type": ["array", "null"],
                        "items": { "$ref": "#/components/schemas/FilezFileId" }
                    }
                }
            },
            "UpdateFileGroupRequestBody": {
                "type": "object",
                "required": ["file_group_id", "changeset"],
                "properties": {
                    "changeset": { "$ref": "#/components/schemas/UpdateFileGroupChangeset" },
                    "file_group_id": { "$ref": "#/components/schemas/FileGroupId" }
                }
            },
            "UpdateFileGroupResponseBody": {
                "type": "object",
                "required": ["updated_file_group"],
                "properties": { "updated_file_group": { "$ref": "#/components/schemas/FileGroup" } }
            },
            "UpdateFileRequestBody": {
                "type": "object",
                "required": ["file_id", "changeset"],
                "properties": {
                    "changeset": { "$ref": "#/components/schemas/UpdateFileChangeset" },
                    "file_id": { "$ref": "#/components/schemas/FilezFileId" }
                }
            },
            "UpdateFileResponseBody": {
                "type": "object",
                "required": ["updated_file"],
                "properties": { "updated_file": { "$ref": "#/components/schemas/FilezFile" } }
            },
            "UpdateFileVersionChangeset": {
                "type": "object",
                "properties": {
                    "new_content_expected_sha256_digest": {
                        "type": ["string", "null"],
                        "maxLength": 64,
                        "minLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    },
                    "new_file_version_metadata": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/FileVersionMetadata" }
                        ]
                    },
                    "new_file_version_mime_type": { "type": ["string", "null"] }
                }
            },
            "UpdateFileVersionsRequestBody": {
                "type": "object",
                "required": ["file_version_id", "changeset"],
                "properties": {
                    "changeset": { "$ref": "#/components/schemas/UpdateFileVersionChangeset" },
                    "file_version_id": { "$ref": "#/components/schemas/FileVersionId" }
                }
            },
            "UpdateFileVersionsResponseBody": {
                "type": "object",
                "required": ["updated_file_version"],
                "properties": {
                    "updated_file_version": { "$ref": "#/components/schemas/FileVersion" }
                }
            },
            "UpdateJobChangeset": {
                "type": "object",
                "properties": {
                    "new_job_deadline_time": { "type": ["string", "null"], "format": "date-time" },
                    "new_job_execution_information": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/JobExecutionInformation" }
                        ]
                    },
                    "new_job_name": { "type": ["string", "null"], "maxLength": 256 },
                    "new_job_persistence": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/JobPersistenceType" }
                        ]
                    }
                }
            },
            "UpdateJobRequestBody": {
                "type": "object",
                "required": ["job_id", "changeset"],
                "properties": {
                    "changeset": { "$ref": "#/components/schemas/UpdateJobChangeset" },
                    "job_id": { "$ref": "#/components/schemas/FilezJobId" }
                }
            },
            "UpdateJobResponseBody": {
                "type": "object",
                "required": ["job"],
                "properties": { "job": { "$ref": "#/components/schemas/FilezJob" } }
            },
            "UpdateJobStatusRequestBody": {
                "type": "object",
                "required": ["new_status"],
                "properties": {
                    "new_job_status_details": {
                        "oneOf": [
                            { "type": "null" },
                            { "$ref": "#/components/schemas/JobStatusDetails" }
                        ]
                    },
                    "new_status": { "$ref": "#/components/schemas/JobStatus" }
                }
            },
            "UpdateJobStatusResponseBody": {
                "type": "object",
                "required": ["updated_job"],
                "properties": { "updated_job": { "$ref": "#/components/schemas/FilezJob" } }
            },
            "UpdateStorageQuotaChangeset": {
                "type": "object",
                "properties": {
                    "new_storage_quota_bytes": { "type": ["integer", "null"], "format": "int64" }
                }
            },
            "UpdateStorageQuotaRequestBody": {
                "type": "object",
                "required": ["storage_quota_id", "changeset"],
                "properties": {
                    "changeset": { "$ref": "#/components/schemas/UpdateStorageQuotaChangeset" },
                    "storage_quota_id": { "$ref": "#/components/schemas/StorageQuotaId" }
                }
            },
            "UpdateStorageQuotaResponseBody": {
                "type": "object",
                "required": ["updated_storage_quota"],
                "properties": {
                    "updated_storage_quota": { "$ref": "#/components/schemas/StorageQuota" }
                }
            },
            "UpdateTagsMethod": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["Add"],
                        "properties": {
                            "Add": {
                                "type": "object",
                                "additionalProperties": { "type": "string" },
                                "propertyNames": { "type": "string" }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Remove"],
                        "properties": {
                            "Remove": {
                                "type": "object",
                                "additionalProperties": { "type": "string" },
                                "propertyNames": { "type": "string" }
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Set"],
                        "properties": {
                            "Set": {
                                "type": "object",
                                "additionalProperties": { "type": "string" },
                                "propertyNames": { "type": "string" }
                            }
                        }
                    },
                    { "type": "string", "enum": ["Clear"] }
                ]
            },
            "UpdateTagsRequestBody": {
                "type": "object",
                "required": ["tag_resource_type", "resource_ids", "update_tags"],
                "properties": {
                    "resource_ids": {
                        "type": "array",
                        "items": { "type": "string", "format": "uuid" }
                    },
                    "tag_resource_type": { "$ref": "#/components/schemas/TagResourceType" },
                    "update_tags": { "$ref": "#/components/schemas/UpdateTagsMethod" }
                }
            },
            "UpdateUserGroupChangeset": {
                "type": "object",
                "properties": {
                    "new_user_group_name": { "type": ["string", "null"], "maxLength": 256 }
                }
            },
            "UpdateUserGroupMembersRequestBody": {
                "type": "object",
                "required": ["user_group_id"],
                "properties": {
                    "user_group_id": { "$ref": "#/components/schemas/UserGroupId" },
                    "users_to_add": {
                        "type": ["array", "null"],
                        "items": { "$ref": "#/components/schemas/FilezUserId" }
                    },
                    "users_to_remove": {
                        "type": ["array", "null"],
                        "items": { "$ref": "#/components/schemas/FilezUserId" }
                    }
                }
            },
            "UpdateUserGroupRequestBody": {
                "type": "object",
                "required": ["user_group_id", "changeset"],
                "properties": {
                    "changeset": { "$ref": "#/components/schemas/UpdateUserGroupChangeset" },
                    "user_group_id": { "$ref": "#/components/schemas/UserGroupId" }
                }
            },
            "UpdateUserGroupResponseBody": {
                "type": "object",
                "required": ["updated_user_group"],
                "properties": { "updated_user_group": { "$ref": "#/components/schemas/UserGroup" } }
            },
            "UserGroup": {
                "type": "object",
                "required": ["id", "owner_id", "name", "created_time", "modified_time"],
                "properties": {
                    "created_time": { "type": "string", "format": "date-time" },
                    "id": { "$ref": "#/components/schemas/UserGroupId" },
                    "modified_time": { "type": "string", "format": "date-time" },
                    "name": { "type": "string" },
                    "owner_id": { "$ref": "#/components/schemas/FilezUserId" }
                }
            },
            "UserGroupId": { "type": "string", "format": "uuid" },
            "UserMeta": {
                "type": "object",
                "required": ["user"],
                "properties": { "user": { "$ref": "#/components/schemas/FilezUser" } }
            }
        }
    },
    "tags": [{ "name": "filez", "description": "MOWS Filez API" }]
}
